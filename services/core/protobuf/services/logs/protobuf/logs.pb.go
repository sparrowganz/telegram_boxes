// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: services/logs/protobuf/logs.proto

package protobuf

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//----------------------------------------------------------------------------------------------------------------------
//  Access Log
//----------------------------------------------------------------------------------------------------------------------
type AccessLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string `protobuf:"bytes,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Method     string `protobuf:"bytes,2,opt,name=Method,proto3" json:"Method,omitempty"`
	ServerName string `protobuf:"bytes,3,opt,name=ServerName,proto3" json:"ServerName,omitempty"`
	Time       int64  `protobuf:"varint,4,opt,name=Time,proto3" json:"Time,omitempty"`
	Duration   string `protobuf:"bytes,5,opt,name=Duration,proto3" json:"Duration,omitempty"`
	User       string `protobuf:"bytes,6,opt,name=User,proto3" json:"User,omitempty"`
}

func (x *AccessLogRequest) Reset() {
	*x = AccessLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_logs_protobuf_logs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessLogRequest) ProtoMessage() {}

func (x *AccessLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_logs_protobuf_logs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessLogRequest.ProtoReflect.Descriptor instead.
func (*AccessLogRequest) Descriptor() ([]byte, []int) {
	return file_services_logs_protobuf_logs_proto_rawDescGZIP(), []int{0}
}

func (x *AccessLogRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AccessLogRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *AccessLogRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *AccessLogRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *AccessLogRequest) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *AccessLogRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type AccessLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccessLogResponse) Reset() {
	*x = AccessLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_logs_protobuf_logs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessLogResponse) ProtoMessage() {}

func (x *AccessLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_logs_protobuf_logs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessLogResponse.ProtoReflect.Descriptor instead.
func (*AccessLogResponse) Descriptor() ([]byte, []int) {
	return file_services_logs_protobuf_logs_proto_rawDescGZIP(), []int{1}
}

type ErrorLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId  string `protobuf:"bytes,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	ServerName string `protobuf:"bytes,2,opt,name=ServerName,proto3" json:"ServerName,omitempty"`
	Time       int64  `protobuf:"varint,3,opt,name=Time,proto3" json:"Time,omitempty"`
	Error      string `protobuf:"bytes,4,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ErrorLogRequest) Reset() {
	*x = ErrorLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_logs_protobuf_logs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorLogRequest) ProtoMessage() {}

func (x *ErrorLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_logs_protobuf_logs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorLogRequest.ProtoReflect.Descriptor instead.
func (*ErrorLogRequest) Descriptor() ([]byte, []int) {
	return file_services_logs_protobuf_logs_proto_rawDescGZIP(), []int{2}
}

func (x *ErrorLogRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ErrorLogRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *ErrorLogRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ErrorLogRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ErrorLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorLogResponse) Reset() {
	*x = ErrorLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_logs_protobuf_logs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorLogResponse) ProtoMessage() {}

func (x *ErrorLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_logs_protobuf_logs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorLogResponse.ProtoReflect.Descriptor instead.
func (*ErrorLogResponse) Descriptor() ([]byte, []int) {
	return file_services_logs_protobuf_logs_proto_rawDescGZIP(), []int{3}
}

type SystemLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName string `protobuf:"bytes,1,opt,name=ServerName,proto3" json:"ServerName,omitempty"`
	Time       int64  `protobuf:"varint,2,opt,name=Time,proto3" json:"Time,omitempty"`
	Data       string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *SystemLogRequest) Reset() {
	*x = SystemLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_logs_protobuf_logs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemLogRequest) ProtoMessage() {}

func (x *SystemLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_logs_protobuf_logs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemLogRequest.ProtoReflect.Descriptor instead.
func (*SystemLogRequest) Descriptor() ([]byte, []int) {
	return file_services_logs_protobuf_logs_proto_rawDescGZIP(), []int{4}
}

func (x *SystemLogRequest) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *SystemLogRequest) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SystemLogRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SystemLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemLogResponse) Reset() {
	*x = SystemLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_logs_protobuf_logs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemLogResponse) ProtoMessage() {}

func (x *SystemLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_logs_protobuf_logs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemLogResponse.ProtoReflect.Descriptor instead.
func (*SystemLogResponse) Descriptor() ([]byte, []int) {
	return file_services_logs_protobuf_logs_proto_rawDescGZIP(), []int{5}
}

var File_services_logs_protobuf_logs_proto protoreflect.FileDescriptor

var file_services_logs_protobuf_logs_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0xac, 0x01,
	0x0a, 0x10, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x22, 0x13, 0x0a, 0x11,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x79, 0x0a, 0x0f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x12, 0x0a, 0x10,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5a, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x13, 0x0a, 0x11,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xdd, 0x01, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x09,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x6f, 0x67,
	0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x18, 0x5a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x6f,
	0x67, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_services_logs_protobuf_logs_proto_rawDescOnce sync.Once
	file_services_logs_protobuf_logs_proto_rawDescData = file_services_logs_protobuf_logs_proto_rawDesc
)

func file_services_logs_protobuf_logs_proto_rawDescGZIP() []byte {
	file_services_logs_protobuf_logs_proto_rawDescOnce.Do(func() {
		file_services_logs_protobuf_logs_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_logs_protobuf_logs_proto_rawDescData)
	})
	return file_services_logs_protobuf_logs_proto_rawDescData
}

var file_services_logs_protobuf_logs_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_services_logs_protobuf_logs_proto_goTypes = []interface{}{
	(*AccessLogRequest)(nil),  // 0: protobuf.AccessLogRequest
	(*AccessLogResponse)(nil), // 1: protobuf.AccessLogResponse
	(*ErrorLogRequest)(nil),   // 2: protobuf.ErrorLogRequest
	(*ErrorLogResponse)(nil),  // 3: protobuf.ErrorLogResponse
	(*SystemLogRequest)(nil),  // 4: protobuf.SystemLogRequest
	(*SystemLogResponse)(nil), // 5: protobuf.SystemLogResponse
}
var file_services_logs_protobuf_logs_proto_depIdxs = []int32{
	0, // 0: protobuf.Logger.AccessLog:input_type -> protobuf.AccessLogRequest
	2, // 1: protobuf.Logger.ErrorLog:input_type -> protobuf.ErrorLogRequest
	4, // 2: protobuf.Logger.SystemLog:input_type -> protobuf.SystemLogRequest
	1, // 3: protobuf.Logger.AccessLog:output_type -> protobuf.AccessLogResponse
	3, // 4: protobuf.Logger.ErrorLog:output_type -> protobuf.ErrorLogResponse
	5, // 5: protobuf.Logger.SystemLog:output_type -> protobuf.SystemLogResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_services_logs_protobuf_logs_proto_init() }
func file_services_logs_protobuf_logs_proto_init() {
	if File_services_logs_protobuf_logs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_logs_protobuf_logs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_logs_protobuf_logs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_logs_protobuf_logs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_logs_protobuf_logs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_logs_protobuf_logs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_logs_protobuf_logs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_logs_protobuf_logs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_logs_protobuf_logs_proto_goTypes,
		DependencyIndexes: file_services_logs_protobuf_logs_proto_depIdxs,
		MessageInfos:      file_services_logs_protobuf_logs_proto_msgTypes,
	}.Build()
	File_services_logs_protobuf_logs_proto = out.File
	file_services_logs_protobuf_logs_proto_rawDesc = nil
	file_services_logs_protobuf_logs_proto_goTypes = nil
	file_services_logs_protobuf_logs_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LoggerClient is the client API for Logger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoggerClient interface {
	//отправка сообщения
	AccessLog(ctx context.Context, in *AccessLogRequest, opts ...grpc.CallOption) (*AccessLogResponse, error)
	ErrorLog(ctx context.Context, in *ErrorLogRequest, opts ...grpc.CallOption) (*ErrorLogResponse, error)
	SystemLog(ctx context.Context, in *SystemLogRequest, opts ...grpc.CallOption) (*SystemLogResponse, error)
}

type loggerClient struct {
	cc grpc.ClientConnInterface
}

func NewLoggerClient(cc grpc.ClientConnInterface) LoggerClient {
	return &loggerClient{cc}
}

func (c *loggerClient) AccessLog(ctx context.Context, in *AccessLogRequest, opts ...grpc.CallOption) (*AccessLogResponse, error) {
	out := new(AccessLogResponse)
	err := c.cc.Invoke(ctx, "/protobuf.Logger/AccessLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loggerClient) ErrorLog(ctx context.Context, in *ErrorLogRequest, opts ...grpc.CallOption) (*ErrorLogResponse, error) {
	out := new(ErrorLogResponse)
	err := c.cc.Invoke(ctx, "/protobuf.Logger/ErrorLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loggerClient) SystemLog(ctx context.Context, in *SystemLogRequest, opts ...grpc.CallOption) (*SystemLogResponse, error) {
	out := new(SystemLogResponse)
	err := c.cc.Invoke(ctx, "/protobuf.Logger/SystemLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoggerServer is the server API for Logger service.
type LoggerServer interface {
	//отправка сообщения
	AccessLog(context.Context, *AccessLogRequest) (*AccessLogResponse, error)
	ErrorLog(context.Context, *ErrorLogRequest) (*ErrorLogResponse, error)
	SystemLog(context.Context, *SystemLogRequest) (*SystemLogResponse, error)
}

// UnimplementedLoggerServer can be embedded to have forward compatible implementations.
type UnimplementedLoggerServer struct {
}

func (*UnimplementedLoggerServer) AccessLog(context.Context, *AccessLogRequest) (*AccessLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AccessLog not implemented")
}
func (*UnimplementedLoggerServer) ErrorLog(context.Context, *ErrorLogRequest) (*ErrorLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ErrorLog not implemented")
}
func (*UnimplementedLoggerServer) SystemLog(context.Context, *SystemLogRequest) (*SystemLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SystemLog not implemented")
}

func RegisterLoggerServer(s *grpc.Server, srv LoggerServer) {
	s.RegisterService(&_Logger_serviceDesc, srv)
}

func _Logger_AccessLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccessLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServer).AccessLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Logger/AccessLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServer).AccessLog(ctx, req.(*AccessLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logger_ErrorLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ErrorLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServer).ErrorLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Logger/ErrorLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServer).ErrorLog(ctx, req.(*ErrorLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Logger_SystemLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SystemLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoggerServer).SystemLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Logger/SystemLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoggerServer).SystemLog(ctx, req.(*SystemLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Logger",
	HandlerType: (*LoggerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AccessLog",
			Handler:    _Logger_AccessLog_Handler,
		},
		{
			MethodName: "ErrorLog",
			Handler:    _Logger_ErrorLog_Handler,
		},
		{
			MethodName: "SystemLog",
			Handler:    _Logger_SystemLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/logs/protobuf/logs.proto",
}
